name: Build and Deploy to Raspberry Pi

permissions:
  packages: write
  contents: read

on:
  push:
    branches: [mep]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Lowercase repository_owner
        id: lowercase
        run: echo "repo_lower=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image for ARM64
        run: docker build --platform linux/arm64 -t ghcr.io/${{ github.repository_owner }}/cv-maker:latest .

      - name: Push Docker image to GHCR
        run: docker push ghcr.io/${{ steps.lowercase.outputs.repo_lower }}/cv-maker:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Lowercase repository_owner
        id: lowercase
        run: echo "repo_lower=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Write SSH key
        run: |
          echo "${{ secrets.RASPBERRY_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy to Raspberry Pi using Docker Compose
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.RASPBERRY_USER }}@${{ secrets.RASPBERRY_HOST }} << EOF
          set -e
          cd /var/www/cv-maker    
  
          echo "ðŸ“„ CrÃ©ation du fichier .env"
          cat > .env << EOL
          SERVER_NAME=92.162.186.29
          CADDY_MERCURE_JWT_SECRET=${{ secrets.CADDY_MERCURE_JWT_SECRET }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          MERCURE_URL=http://localhost/.well-known/mercure
          MERCURE_PUBLIC_URL=http://92.162.186.29/.well-known/mercure
          MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER=${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          EOL
            echo "Connexion Ã  GHCR"
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    
            echo "Pull image"
            docker pull ghcr.io/${{ steps.lowercase.outputs.repo_lower }}/cv-maker:latest
    
            echo "Docker Compose up"
            docker compose -f compose-prod.yml up -d --force-recreate --remove-orphans
          EOF