name: Symfony Tests

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    env:
      KERNEL_CLASS: 'App\Kernel'
      APP_SECRET: ${{ secrets.APP_SECRET }}
      SYMFONY_DEPRECATIONS_HELPER: 999999
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_VERSION: 8.4.4
      DATABASE_URL: mysql://${{ secrets.MYSQL_USER }}:${{ secrets.MYSQL_PASSWORD }}@localhost:3306/${{ secrets.MYSQL_DATABASE }}?serverVersion=8&charset=utf8
      MAILER_DSN: smtp://localhost:1025
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env for CI
        run: |
          echo "APP_ENV=prod" >> .env
          echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> .env
          echo "SYMFONY_DEPRECATIONS_HELPER=999999" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_VERSION=8.4.4" >> .env
          echo "DATABASE_URL='mysql://${{ secrets.MYSQL_USER }}:${{ secrets.MYSQL_PASSWORD }}@localhost:3306/${{ secrets.MYSQL_DATABASE }}?serverVersion=8&charset=utf8'" >> .env
          echo "MAILER_DSN=smtp://localhost:1025" >> .env
        
      - name: Build Docker images and start services
        run: docker compose -f 'compose.yaml' up -d --build 
        
      - name: Fix Git ownership issue
        run: docker compose exec -T php git config --global --add safe.directory /app
        
      - name: Create test database
        run: docker compose exec -T php bin/console -e test doctrine:database:create
        
      - name: Run fixtures
        run: docker compose exec -T php bin/console -e test doctrine:fixtures:load --no-interaction
        
      - name: Run PHPUnit
        run: docker compose exec -T php bin/phpunit
        
      - name: Doctrine Schema Validator
        run: docker compose exec -T php bin/console -e test doctrine:schema:validate